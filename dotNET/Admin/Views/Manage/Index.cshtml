@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Mvc.Localization
@model Admin.ViewModels.ManageViewModels.IndexViewModel

@{
    ViewData["Title"] = Localizer["PageTitle"];
}

<h2>@ViewData["Title"]</h2>
<p class="text-success">@ViewData["StatusMessage"]</p>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>@Localizer["Password"]</dt>
        <dd>
            @if (Model.HasPassword)
            {
                <a asp-controller="Manage" asp-action="ChangePassword" class="btn-bracketed">@Localizer["Change"]</a>
            }
            else
            {
                <a asp-controller="Manage" asp-action="SetPassword" class="btn-bracketed">@Localizer["Create"]</a>
            }
        </dd>

        <dt>Two-Factor Authentication:</dt>
        <dd>
            <p>
                There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532713">this article</a>
                for setting up this application to support two-factor authentication.
            </p>
            @*@if (Model.TwoFactor)
                {
                    <form asp-controller="Manage" asp-action="DisableTwoFactorAuthentication" method="post" class="form-horizontal">
                        Enabled <button type="submit" class="btn-link btn-bracketed">Disable</button>
                    </form>
                }
                else
                {
                    <form asp-controller="Manage" asp-action="EnableTwoFactorAuthentication" method="post" class="form-horizontal">
                        <button type="submit" class="btn-link btn-bracketed">Enable</button> Disabled
                    </form>
                }*@
        </dd>
    </dl>
</div>
